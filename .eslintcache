[{"I:\\Web\\Lampa test\\lampa-shop\\src\\reportWebVitals.js":"1","I:\\Web\\Lampa test\\lampa-shop\\src\\App.js":"2","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\store.js":"3","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\rootReducer.js":"4","I:\\Web\\Lampa test\\lampa-shop\\src\\pages\\HomePage\\index.jsx":"5","I:\\Web\\Lampa test\\lampa-shop\\src\\index.js":"6","I:\\Web\\Lampa test\\lampa-shop\\src\\routes.js":"7","I:\\Web\\Lampa test\\lampa-shop\\src\\pages\\CartPage\\index.jsx":"8","I:\\Web\\Lampa test\\lampa-shop\\src\\components\\Header\\Header.jsx":"9","I:\\Web\\Lampa test\\lampa-shop\\src\\components\\UI\\Button\\Button.jsx":"10","I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\GoodsGrid\\GoodsGrid.jsx":"11","I:\\Web\\Lampa test\\lampa-shop\\src\\firebase.js":"12","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\goods-reducer.js":"13","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\cart-reducer.js":"14","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\actionTypes.js":"15","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\goods-actions.js":"16","I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\GoodsGrid\\GoodsItem.jsx":"17","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\cart-actions.js":"18","I:\\Web\\Lampa test\\lampa-shop\\src\\components\\Footer\\Footer.jsx":"19","I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\SubmitForm\\SubmitForm.jsx":"20","I:\\Web\\Lampa test\\lampa-shop\\src\\components\\UI\\RangeButtons\\RangeButtons.jsx":"21","I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\CartGoodsList\\CartGoodsList.jsx":"22","I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\MainWrapper\\MainWrapper.jsx":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":157,"mtime":1606249941668,"results":"26","hashOfConfig":"25"},{"size":381,"mtime":1606246926335,"results":"27","hashOfConfig":"25"},{"size":299,"mtime":1606667148418,"results":"28","hashOfConfig":"25"},{"size":471,"mtime":1606674046265,"results":"29","hashOfConfig":"25"},{"size":667,"mtime":1606675210632,"results":"30","hashOfConfig":"25"},{"size":422,"mtime":1606247930026,"results":"31","hashOfConfig":"25"},{"size":866,"mtime":1606674046903,"results":"32","hashOfConfig":"25"},{"size":1078,"mtime":1606674669639,"results":"33","hashOfConfig":"25"},{"size":505,"mtime":1606664227361,"results":"34","hashOfConfig":"25"},{"size":2119,"mtime":1606671230227,"results":"35","hashOfConfig":"25"},{"size":536,"mtime":1606333952152,"results":"36","hashOfConfig":"25"},{"size":1014,"mtime":1606591786327,"results":"37","hashOfConfig":"25"},{"size":2932,"mtime":1606674806500,"results":"38","hashOfConfig":"25"},{"size":477,"mtime":1606673625572,"results":"39","hashOfConfig":"25"},{"size":1002,"mtime":1606675189522,"results":"40","hashOfConfig":"25"},{"size":1018,"mtime":1606664308246,"results":"41","hashOfConfig":"25"},{"size":478,"mtime":1606673826952,"results":"42","hashOfConfig":"25"},{"size":347,"mtime":1606583699348,"results":"43","hashOfConfig":"25"},{"size":3426,"mtime":1606673499298,"results":"44","hashOfConfig":"25"},{"size":540,"mtime":1606670009140,"results":"45","hashOfConfig":"25"},{"size":2793,"mtime":1606674928410,"results":"46","hashOfConfig":"25"},{"size":1008,"mtime":1606674198684,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1aecf63",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"I:\\Web\\Lampa test\\lampa-shop\\src\\reportWebVitals.js",[],["102","103"],"I:\\Web\\Lampa test\\lampa-shop\\src\\App.js",[],["104","105"],"I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\store.js",[],["106","107"],"I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\rootReducer.js",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\pages\\HomePage\\index.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\index.js",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\routes.js",[],["108","109"],"I:\\Web\\Lampa test\\lampa-shop\\src\\pages\\CartPage\\index.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\components\\Header\\Header.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\components\\UI\\Button\\Button.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\GoodsGrid\\GoodsGrid.jsx",["110"],"import React, { useEffect } from 'react'\r\nimport s from './GoodsGrid.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { cleanGoods, getGoods } from '../../redux/actions/goods-actions'\r\nimport { addNewGoodToCart, removeGoodFromCart } from '../../redux/actions/cart-actions'\r\nimport GoodsItem from './GoodsItem'\r\n\r\n\r\nconst GoodsGrid = (props) => {\r\n    useEffect(() => {\r\n        props.onGetGoods()\r\n    }, [])\r\n    const buttonAddHandler = (e) => {\r\n        const cartItem = props.goodsArr.find(({ id }) => id === +e.target.value)\r\n        props.onAddNewGoodToCart(cartItem)\r\n    }\r\n\r\n    const buttonRemoveHandler = (e) => {\r\n        props.onRemoveGoodFromCart(+e.target.value)\r\n    }\r\n\r\n    const itemsInCart = (id) => {\r\n        const item = props.goodsInCart.find((item) => id === item.id) || {}\r\n        return item.hasOwnProperty('amount') ? item.amount : 0\r\n    }\r\n    return (\r\n        props.isLoading ?\r\n            <div className={s.loader__wrap}>\r\n                <span className={`text--md ${s.loader}`}>Loading...</span>\r\n            </div>\r\n            :\r\n            <div className={s.grid}>\r\n                {props.goodsArr.map((item) => (\r\n                    <GoodsItem\r\n                        {...item}\r\n                        key={item.id}\r\n                        disabled={!itemsInCart(item.id)}\r\n                        buttonAddHandler={(e) => buttonAddHandler(e)}\r\n                        buttonRemoveHandler={(e) => buttonRemoveHandler(e)}\r\n                        itemsInCart={itemsInCart(item.id)}\r\n                    />\r\n                ))}\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ goods, cart }) => {\r\n    return {\r\n        ...goods,\r\n        ...cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onGetGoods: () => dispatch(getGoods()),\r\n        onCleanGoods: () => dispatch(cleanGoods()),\r\n        onAddNewGoodToCart: (goodItem) => dispatch(addNewGoodToCart(goodItem)),\r\n        onRemoveGoodFromCart: (id) => dispatch(removeGoodFromCart(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoodsGrid)","I:\\Web\\Lampa test\\lampa-shop\\src\\firebase.js",[],["111","112"],"I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\goods-reducer.js",["113"],"import { CLEAN_GOODS, GET_GOODS_REQUEST_FAILURE, GET_GOODS_REQUEST_STARTED, GET_GOODS_REQUEST_SUCCESS } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    goodsArr: [],\r\n    isLoading: false,\r\n    error: ''\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_GOODS_REQUEST_STARTED: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            };\r\n        }\r\n        case GET_GOODS_REQUEST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                goodsArr: action.payload,\r\n                isLoading: false\r\n            };\r\n        }\r\n        case GET_GOODS_REQUEST_FAILURE: {\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                isLoading: false\r\n            };\r\n        }\r\n        case CLEAN_GOODS: {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\reducers\\cart-reducer.js",["114"],"import { ADD_NEW_GOOD_TO_CART, GET_GOODS_FROM_STORAGE, REMOVE_GOOD_FROM_CART } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    goodsInCart: [],\r\n    cartSum: 0,\r\n    commonAmount: 0\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_NEW_GOOD_TO_CART: {\r\n            const { goodsInCart } = state\r\n            const currentIndex = goodsInCart.findIndex(({ id }) => id === action.payload.id)\r\n            if (currentIndex === -1) {\r\n                goodsInCart.push({\r\n                    id: action.payload.id,\r\n                    title: action.payload.title,\r\n                    price: action.payload.price,\r\n                    amount: 1\r\n                })\r\n\r\n            } else {\r\n                goodsInCart[currentIndex] = {\r\n                    id: action.payload.id,\r\n                    title: action.payload.title,\r\n                    price: action.payload.price,\r\n                    amount: ++goodsInCart[currentIndex].amount\r\n                }\r\n            }\r\n            setGoodsToLocalStorage(goodsInCart)\r\n            return {\r\n                ...state,\r\n                goodsInCart: goodsInCart,\r\n                cartSum: countCommonPrice(goodsInCart),\r\n                commonAmount: countCommonAmount(goodsInCart)\r\n            }\r\n        }\r\n\r\n        case REMOVE_GOOD_FROM_CART: {\r\n            const currentIndex = state.goodsInCart.findIndex(({ id }) => id === action.payload)\r\n            state.goodsInCart[currentIndex].amount = state.goodsInCart[currentIndex].amount - 1\r\n            if (state.goodsInCart[currentIndex].amount === 0) {\r\n                state.goodsInCart.splice(currentIndex, 1)\r\n            }\r\n            setGoodsToLocalStorage(state.goodsInCart)\r\n            return {\r\n                ...state,\r\n                cartSum: countCommonPrice(state.goodsInCart),\r\n                commonAmount: countCommonAmount(state.goodsInCart)\r\n            }\r\n        }\r\n\r\n        case GET_GOODS_FROM_STORAGE: {\r\n            const cartFromStorage = JSON.parse(localStorage.getItem('goodsInCart'))\r\n            return {\r\n                ...state,\r\n                goodsInCart: cartFromStorage,\r\n                cartSum: countCommonPrice(cartFromStorage),\r\n                commonAmount: countCommonAmount(cartFromStorage)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst countCommonPrice = (goodsInCart) => {\r\n    let newPrice = 0\r\n    goodsInCart.map(({ price, amount }) => newPrice += price * amount)\r\n    return newPrice\r\n}\r\n\r\nconst countCommonAmount = (goodsInCart) => {\r\n    let commonAmount = 0\r\n    if (goodsInCart.length) {\r\n        goodsInCart.map(item => commonAmount += item.amount)\r\n    } else {\r\n        commonAmount = 0\r\n    }\r\n    return commonAmount\r\n}\r\n\r\nconst setGoodsToLocalStorage = (goodsInCart) => {\r\n    localStorage.setItem('goodsInCart', JSON.stringify(goodsInCart))\r\n}","I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\actionTypes.js",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\goods-actions.js",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\GoodsGrid\\GoodsItem.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\redux\\actions\\cart-actions.js",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\components\\Footer\\Footer.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\SubmitForm\\SubmitForm.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\components\\UI\\RangeButtons\\RangeButtons.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\CartGoodsList\\CartGoodsList.jsx",[],"I:\\Web\\Lampa test\\lampa-shop\\src\\containers\\MainWrapper\\MainWrapper.jsx",["115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"118","replacedBy":"121"},{"ruleId":"116","replacedBy":"122"},{"ruleId":"118","replacedBy":"123"},{"ruleId":"116","replacedBy":"124"},{"ruleId":"118","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":12,"column":8,"nodeType":"128","endLine":12,"endColumn":10,"suggestions":"129"},{"ruleId":"116","replacedBy":"130"},{"ruleId":"118","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":9,"column":1,"nodeType":"134","endLine":39,"endColumn":2},{"ruleId":"132","severity":1,"message":"133","line":9,"column":1,"nodeType":"134","endLine":66,"endColumn":2},{"ruleId":"126","severity":1,"message":"135","line":11,"column":8,"nodeType":"128","endLine":11,"endColumn":10,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],["137"],["138"],["137"],["138"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["139"],["137"],["138"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'onAddGoodsFromStorage'. Either include it or remove the dependency array. If 'onAddGoodsFromStorage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [props]",{"range":"145","text":"146"},"Update the dependencies array to be: [onAddGoodsFromStorage]",{"range":"147","text":"148"},[416,418],"[props]",[431,433],"[onAddGoodsFromStorage]"]